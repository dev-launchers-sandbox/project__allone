{"id":"xeL6","dependencies":[{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/package.json","includedInParent":true,"mtime":1589925283588},{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/package.json","includedInParent":true,"mtime":1589925280695},{"name":"./PropertyValueSet","loc":{"line":7,"column":31},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/actions/SetVisible.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/actions/PropertyValueSet.js"}],"generated":{"js":"var e=require(\"./PropertyValueSet\"),r=function(r,t,u,i){return e(r,\"visible\",t,0,u,i)};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":27,"column":0},"generated":{"line":1,"column":36}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":27,"column":0},"generated":{"line":1,"column":38}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":27,"column":0},"generated":{"line":1,"column":47}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":27,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":27,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":27,"column":0},"generated":{"line":1,"column":53}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":29,"column":0},"generated":{"line":1,"column":56}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":29,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":29,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":29,"column":0},"generated":{"line":1,"column":67}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":29,"column":0},"generated":{"line":1,"column":77}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":29,"column":0},"generated":{"line":1,"column":79}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":29,"column":0},"generated":{"line":1,"column":81}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":29,"column":0},"generated":{"line":1,"column":83}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":32,"column":0},"generated":{"line":1,"column":87}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":32,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/phaser/src/actions/SetVisible.js","original":{"line":32,"column":0},"generated":{"line":1,"column":102}}],"sources":{"node_modules/phaser/src/actions/SetVisible.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar PropertyValueSet = require('./PropertyValueSet');\r\n\r\n/**\r\n * Takes an array of Game Objects, or any objects that have the public property `visible`\r\n * and then sets it to the given value.\r\n *\r\n * To use this with a Group: `SetVisible(group.getChildren(), value)`\r\n *\r\n * @function Phaser.Actions.SetVisible\r\n * @since 3.0.0\r\n *\r\n * @generic {Phaser.GameObjects.GameObject[]} G - [items,$return]\r\n *\r\n * @param {(array|Phaser.GameObjects.GameObject[])} items - The array of items to be updated by this action.\r\n * @param {boolean} value - The value to set the property to.\r\n * @param {integer} [index=0] - An optional offset to start searching from within the items array.\r\n * @param {integer} [direction=1] - The direction to iterate through the array. 1 is from beginning to end, -1 from end to beginning.\r\n *\r\n * @return {(array|Phaser.GameObjects.GameObject[])} The array of objects that were passed to this Action.\r\n */\r\nvar SetVisible = function (items, value, index, direction)\r\n{\r\n    return PropertyValueSet(items, 'visible', value, 0, index, direction);\r\n};\r\n\r\nmodule.exports = SetVisible;\r\n"},"lineCount":null}},"error":null,"hash":"b04a3c4e8037e73f3327a05859cd2627","cacheData":{"env":{}}}