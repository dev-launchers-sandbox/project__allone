{"id":"LN38","dependencies":[{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/package.json","includedInParent":true,"mtime":1589925283588},{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/package.json","includedInParent":true,"mtime":1589925280695}],"generated":{"js":"var i={setCollisionCategory:function(i){return this.body.collisionFilter.category=i,this},setCollisionGroup:function(i){return this.body.collisionFilter.group=i,this},setCollidesWith:function(i){var o=0;if(Array.isArray(i))for(var t=0;t<i.length;t++)o|=i[t];else o=i;return this.body.collisionFilter.mask=o,this}};module.exports=i;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":13,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":13,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":13,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":25,"column":0},"generated":{"line":1,"column":7}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":25,"column":0},"generated":{"line":1,"column":28}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":25,"column":0},"generated":{"line":1,"column":37}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":29,"column":0},"generated":{"line":1,"column":40}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":27,"column":0},"generated":{"line":1,"column":47}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":27,"column":0},"generated":{"line":1,"column":52}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":27,"column":0},"generated":{"line":1,"column":57}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":27,"column":0},"generated":{"line":1,"column":73}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":27,"column":0},"generated":{"line":1,"column":82}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":29,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":42,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":42,"column":0},"generated":{"line":1,"column":108}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":42,"column":0},"generated":{"line":1,"column":117}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":46,"column":0},"generated":{"line":1,"column":120}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":44,"column":0},"generated":{"line":1,"column":127}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":44,"column":0},"generated":{"line":1,"column":132}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":44,"column":0},"generated":{"line":1,"column":137}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":44,"column":0},"generated":{"line":1,"column":153}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":44,"column":0},"generated":{"line":1,"column":159}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":46,"column":0},"generated":{"line":1,"column":161}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":59,"column":0},"generated":{"line":1,"column":167}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":59,"column":0},"generated":{"line":1,"column":183}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":59,"column":0},"generated":{"line":1,"column":192}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":61,"column":0},"generated":{"line":1,"column":195}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":61,"column":0},"generated":{"line":1,"column":199}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":61,"column":0},"generated":{"line":1,"column":201}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":63,"column":0},"generated":{"line":1,"column":203}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":63,"column":0},"generated":{"line":1,"column":206}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":63,"column":0},"generated":{"line":1,"column":212}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":63,"column":0},"generated":{"line":1,"column":220}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":69,"column":0},"generated":{"line":1,"column":223}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":69,"column":0},"generated":{"line":1,"column":227}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":69,"column":0},"generated":{"line":1,"column":231}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":69,"column":0},"generated":{"line":1,"column":233}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":69,"column":0},"generated":{"line":1,"column":235}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":69,"column":0},"generated":{"line":1,"column":237}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":69,"column":0},"generated":{"line":1,"column":239}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":69,"column":0},"generated":{"line":1,"column":246}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":71,"column":0},"generated":{"line":1,"column":250}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":71,"column":0},"generated":{"line":1,"column":253}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":71,"column":0},"generated":{"line":1,"column":255}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":65,"column":0},"generated":{"line":1,"column":263}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":65,"column":0},"generated":{"line":1,"column":265}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":77,"column":0},"generated":{"line":1,"column":267}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":75,"column":0},"generated":{"line":1,"column":274}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":75,"column":0},"generated":{"line":1,"column":279}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":75,"column":0},"generated":{"line":1,"column":284}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":75,"column":0},"generated":{"line":1,"column":300}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":75,"column":0},"generated":{"line":1,"column":305}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":77,"column":0},"generated":{"line":1,"column":307}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":82,"column":0},"generated":{"line":1,"column":314}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":82,"column":0},"generated":{"line":1,"column":321}},{"source":"node_modules/phaser/src/physics/matter-js/components/Collision.js","original":{"line":82,"column":0},"generated":{"line":1,"column":329}}],"sources":{"node_modules/phaser/src/physics/matter-js/components/Collision.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * Contains methods for changing the collision filter of a Matter Body. Should be used as a mixin and not called directly.\r\n *\r\n * @name Phaser.Physics.Matter.Components.Collision\r\n * @since 3.0.0\r\n */\r\nvar Collision = {\r\n\r\n    /**\r\n     * Sets the collision category of this Game Object's Matter Body. This number must be a power of two between 2^0 (= 1) and 2^31. Two bodies with different collision groups (see {@link #setCollisionGroup}) will only collide if their collision categories are included in their collision masks (see {@link #setCollidesWith}).\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Collision#setCollisionCategory\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - Unique category bitfield.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setCollisionCategory: function (value)\r\n    {\r\n        this.body.collisionFilter.category = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the collision group of this Game Object's Matter Body. If this is zero or two Matter Bodies have different values, they will collide according to the usual rules (see {@link #setCollisionCategory} and {@link #setCollisionGroup}). If two Matter Bodies have the same positive value, they will always collide; if they have the same negative value, they will never collide.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Collision#setCollisionGroup\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} value - Unique group index.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setCollisionGroup: function (value)\r\n    {\r\n        this.body.collisionFilter.group = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the collision mask for this Game Object's Matter Body. Two Matter Bodies with different collision groups will only collide if each one includes the other's category in its mask based on a bitwise AND, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0` are both true.\r\n     *\r\n     * @method Phaser.Physics.Matter.Components.Collision#setCollidesWith\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(number|number[])} categories - A unique category bitfield, or an array of them.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} This Game Object.\r\n     */\r\n    setCollidesWith: function (categories)\r\n    {\r\n        var flags = 0;\r\n\r\n        if (!Array.isArray(categories))\r\n        {\r\n            flags = categories;\r\n        }\r\n        else\r\n        {\r\n            for (var i = 0; i < categories.length; i++)\r\n            {\r\n                flags |= categories[i];\r\n            }\r\n        }\r\n\r\n        this.body.collisionFilter.mask = flags;\r\n\r\n        return this;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = Collision;\r\n"},"lineCount":null}},"error":null,"hash":"3e652b16616f33dd5d3904a58cd2a778","cacheData":{"env":{}}}