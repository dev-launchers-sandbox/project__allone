{"id":"oC6l","dependencies":[{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/package.json","includedInParent":true,"mtime":1589925283588},{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/package.json","includedInParent":true,"mtime":1589925280695}],"generated":{"js":"module.exports=\"changedata-\";"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/data/events/CHANGE_DATA_KEY_EVENT.js","original":{"line":24,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/data/events/CHANGE_DATA_KEY_EVENT.js","original":{"line":24,"column":0},"generated":{"line":1,"column":7}},{"source":"node_modules/phaser/src/data/events/CHANGE_DATA_KEY_EVENT.js","original":{"line":24,"column":0},"generated":{"line":1,"column":15}}],"sources":{"node_modules/phaser/src/data/events/CHANGE_DATA_KEY_EVENT.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * The Change Data Key Event.\r\n * \r\n * This event is dispatched by a Data Manager when an item in the data store is changed.\r\n * \r\n * Game Objects with data enabled have an instance of a Data Manager under the `data` property. So, to listen for\r\n * the change of a specific data item from a Game Object you would use: `sprite.data.on('changedata-key', listener)`,\r\n * where `key` is the unique string key of the data item. For example, if you have a data item stored called `gold`\r\n * then you can listen for `sprite.data.on('changedata-gold')`.\r\n *\r\n * @event Phaser.Data.Events#CHANGE_DATA_KEY\r\n * \r\n * @param {any} parent - A reference to the object that owns the instance of the Data Manager responsible for this event.\r\n * @param {string} key - The unique key of the data item within the Data Manager.\r\n * @param {any} value - The item that was updated in the Data Manager. This can be of any data type, i.e. a string, boolean, number, object or instance.\r\n * @param {any} previousValue - The previous item that was updated in the Data Manager. This can be of any data type, i.e. a string, boolean, number, object or instance.\r\n */\r\nmodule.exports = 'changedata-';\r\n"},"lineCount":null}},"error":null,"hash":"47c613c8155ac2827587e735917f1dfe","cacheData":{"env":{}}}