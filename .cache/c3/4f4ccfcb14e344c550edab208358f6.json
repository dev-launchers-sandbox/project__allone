{"id":"x5Ie","dependencies":[{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/package.json","includedInParent":true,"mtime":1589925283588},{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/package.json","includedInParent":true,"mtime":1589925280695},{"name":"../SmoothStep","loc":{"line":7,"column":25},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/math/SmoothStep.js"}],"generated":{"js":"var e=require(\"../SmoothStep\"),r=function(r,o,t){return o+(t-o)*e(r,0,1)};module.exports=r;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":31}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":33}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":42}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":44}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":22,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":56}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":59}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":61}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":64}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":66}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":24,"column":0},"generated":{"line":1,"column":70}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":27,"column":0},"generated":{"line":1,"column":74}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":27,"column":0},"generated":{"line":1,"column":81}},{"source":"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js","original":{"line":27,"column":0},"generated":{"line":1,"column":89}}],"sources":{"node_modules/phaser/src/math/interpolation/SmoothStepInterpolation.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar SmoothStep = require('../SmoothStep');\r\n\r\n/**\r\n * A Smooth Step interpolation method.\r\n *\r\n * @function Phaser.Math.Interpolation.SmoothStep\r\n * @since 3.9.0\r\n * @see {@link https://en.wikipedia.org/wiki/Smoothstep}\r\n *\r\n * @param {number} t - The percentage of interpolation, between 0 and 1.\r\n * @param {number} min - The minimum value, also known as the 'left edge', assumed smaller than the 'right edge'.\r\n * @param {number} max - The maximum value, also known as the 'right edge', assumed greater than the 'left edge'.\r\n *\r\n * @return {number} The interpolated value.\r\n */\r\nvar SmoothStepInterpolation = function (t, min, max)\r\n{\r\n    return min + (max - min) * SmoothStep(t, 0, 1);\r\n};\r\n\r\nmodule.exports = SmoothStepInterpolation;\r\n"},"lineCount":null}},"error":null,"hash":"20196a3845846bd3366ce38c39db70eb","cacheData":{"env":{}}}