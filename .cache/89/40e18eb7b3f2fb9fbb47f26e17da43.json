{"id":"Ktr4","dependencies":[{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/package.json","includedInParent":true,"mtime":1589925283588},{"name":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/package.json","includedInParent":true,"mtime":1589925280695},{"name":"./Factory","loc":{"line":13,"column":21},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/index.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/Factory.js"},{"name":"./MatterImage","loc":{"line":14,"column":19},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/index.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/MatterImage.js"},{"name":"./CustomMain","loc":{"line":15,"column":20},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/index.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/CustomMain.js"},{"name":"./MatterPhysics","loc":{"line":16,"column":27},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/index.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/MatterPhysics.js"},{"name":"./poly-decomp","loc":{"line":17,"column":24},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/index.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/poly-decomp/index.js"},{"name":"./MatterSprite","loc":{"line":18,"column":20},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/index.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/MatterSprite.js"},{"name":"./MatterTileBody","loc":{"line":19,"column":22},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/index.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/MatterTileBody.js"},{"name":"./World","loc":{"line":20,"column":19},"parent":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/index.js","resolved":"/home/travis/build/dev-launchers-sandbox/project__allone/node_modules/phaser/src/physics/matter-js/World.js"}],"generated":{"js":"module.exports={Factory:require(\"./Factory\"),Image:require(\"./MatterImage\"),Matter:require(\"./CustomMain\"),MatterPhysics:require(\"./MatterPhysics\"),PolyDecomp:require(\"./poly-decomp\"),Sprite:require(\"./MatterSprite\"),TileBody:require(\"./MatterTileBody\"),World:require(\"./World\")};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":11,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":11,"column":0},"generated":{"line":1,"column":7}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":11,"column":0},"generated":{"line":1,"column":15}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":13,"column":0},"generated":{"line":1,"column":16}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":13,"column":0},"generated":{"line":1,"column":24}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":13,"column":0},"generated":{"line":1,"column":32}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":14,"column":0},"generated":{"line":1,"column":45}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":14,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":14,"column":0},"generated":{"line":1,"column":59}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":15,"column":0},"generated":{"line":1,"column":76}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":15,"column":0},"generated":{"line":1,"column":83}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":15,"column":0},"generated":{"line":1,"column":91}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":16,"column":0},"generated":{"line":1,"column":107}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":16,"column":0},"generated":{"line":1,"column":121}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":16,"column":0},"generated":{"line":1,"column":129}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":17,"column":0},"generated":{"line":1,"column":148}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":17,"column":0},"generated":{"line":1,"column":159}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":17,"column":0},"generated":{"line":1,"column":167}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":18,"column":0},"generated":{"line":1,"column":184}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":18,"column":0},"generated":{"line":1,"column":191}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":18,"column":0},"generated":{"line":1,"column":199}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":19,"column":0},"generated":{"line":1,"column":217}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":19,"column":0},"generated":{"line":1,"column":226}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":19,"column":0},"generated":{"line":1,"column":234}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":20,"column":0},"generated":{"line":1,"column":254}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":20,"column":0},"generated":{"line":1,"column":260}},{"source":"node_modules/phaser/src/physics/matter-js/index.js","original":{"line":20,"column":0},"generated":{"line":1,"column":268}}],"sources":{"node_modules/phaser/src/physics/matter-js/index.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2019 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\n/**\r\n * @namespace Phaser.Physics.Matter\r\n */\r\n\r\nmodule.exports = {\r\n\r\n    Factory: require('./Factory'),\r\n    Image: require('./MatterImage'),\r\n    Matter: require('./CustomMain'),\r\n    MatterPhysics: require('./MatterPhysics'),\r\n    PolyDecomp: require('./poly-decomp'),\r\n    Sprite: require('./MatterSprite'),\r\n    TileBody: require('./MatterTileBody'),\r\n    World: require('./World')\r\n\r\n};\r\n\r\n/**\r\n * @namespace MatterJS\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * The `Matter.Body` module contains methods for creating and manipulating body models.\r\n * A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\r\n * Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\r\n *\r\n * @class MatterJS.Body\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\r\n * A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\r\n * It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\r\n * Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\r\n *\r\n * @class MatterJS.Composite\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * The `Matter.World` module contains methods for creating and manipulating the world composite.\r\n * A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\r\n * A `Matter.World` has a few additional properties including `gravity` and `bounds`.\r\n * It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\r\n * There are also a few methods here that alias those in `Matter.Composite` for easier readability.\r\n *\r\n * @class MatterJS.World\r\n * @extends MatterJS.Composite\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * The `Matter.Constraint` module contains methods for creating and manipulating constraints.\r\n * Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\r\n * The stiffness of constraints can be modified to create springs or elastic.\r\n *\r\n * @class MatterJS.Constraint\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * The `Matter.Engine` module contains methods for creating and manipulating engines.\r\n * An engine is a controller that manages updating the simulation of the world.\r\n *\r\n * @class MatterJS.Engine\r\n */\r\n\r\n/**\r\n * @classdesc\r\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\r\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\r\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\r\n*\r\n* @class MatterJS.Vertices\r\n*/\r\n"},"lineCount":null}},"error":null,"hash":"39d98594f9b089b4715f9fac188da1de","cacheData":{"env":{}}}